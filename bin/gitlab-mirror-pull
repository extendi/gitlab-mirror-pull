#!/usr/bin/env ruby
require_relative '../lib/gitlab-mirror-pull.rb'

# Parse commandline arguments
options = {
	:config => File.join(File.dirname(__FILE__), "../config.example.yml"),
	:log_level => Logger::ERROR
}
OptionParser.new do |opts|
  opts.banner = "Usage: gitlab-mirror-pull.rb [options]"
  opts.set_summary_indent('   ')
  opts.set_summary_width(50)
  opts.define_head "Fetch gitlab repositories when remote set.
Default config #{File.join(File.dirname(__FILE__), "../config.example.yml")}\n\n"
  
  # Config argument
  opts.on("-c", "--config [config.yml]", "Specify config yaml") do |yml|
    options[:config] = yml
  end

  # LogLevel argument
  opts.on("-l", "--log-level [INFO|WARN|ERROR|DEBUG]", "Define log level") do |level|
  	case level
	when "INFO"
	  options[:log_level] = Logger::INFO
	when "WARN"
	  options[:log_level] = Logger::WARN
	when "ERROR"
	  options[:log_level] = Logger::ERROR
	when "DEBUG"
	  options[:log_level] = Logger::DEBUG
	end
  end

  opts.on_tail("-h", "--help", "Show this message") do
    puts opts
    exit
  end

end.parse!

# Run `git fetch` depending on options[:config] 
GitlabMirrorPull.new(options[:config],options[:log_level])